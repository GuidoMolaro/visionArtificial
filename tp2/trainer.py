from math import copysign, log10
import numpy as np
from sklearn import tree
from joblib import dump, load
from sklearn.datasets import load_iris
from DescriptorGenerator import dataset
import matplotlib.pyplot as plt

x = [
    [1.16150194e-03, 7.79665752e-07, 5.40531072e-10, 1.17602412e-10, 2.57826031e-20, 6.56767044e-14, -1.46430967e-20],
    [9.63723622e-04, 3.62432499e-07, 3.68427211e-10, 2.38458240e-11, -1.10349547e-21, -9.36169630e-15, 1.94368458e-21],
    [7.54760378e-04, 1.21961410e-11, 2.75268324e-10, 1.27803199e-15, -7.53827403e-28, -4.43537765e-21, -7.97818264e-29],
    [6.24269624e-04, 1.64963431e-10, 3.49309625e-17, 4.00721726e-21, 1.37608622e-39, 4.62463289e-26, 5.95055668e-40],
    [6.24137161e-04, 2.26765614e-14, 8.20581642e-17, 4.07377130e-23, -4.65051455e-43, 4.87666205e-30, -2.30898491e-42],
    [1.25105630e-03, 1.13799528e-06, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
    [7.14179392e-04, 8.29213042e-08, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
    [1.09356226e-03, 6.29948627e-07, 5.18305303e-10, 1.29187503e-10, 3.19096224e-20, 8.56750355e-14, 9.96368739e-21],
    [9.04082349e-04, 3.90194897e-07, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
    [6.24138868e-04, 3.55969894e-16, 1.46675945e-16, 1.81997238e-21, -2.59280254e-40, 2.38966575e-29, -9.03869126e-40],
    [7.39437524e-04, 1.19615154e-07, 3.93143605e-18, 4.31052042e-19, -5.61138630e-37, -1.49081176e-22, 4.49230548e-47],
    [7.50810344e-04, 1.36589597e-07, 9.10419566e-18, 9.70361626e-19, 1.36622333e-36, -1.86839770e-22, 2.54005591e-36],
    [6.24135477e-04, 2.04055820e-14, 3.38637615e-19, 6.48050212e-24, 9.60020671e-45, 9.25727468e-31, 6.44740810e-53],
    [6.24139346e-04, 3.25651968e-14, 3.39966727e-17, 2.26666578e-22, 1.00945861e-41, -3.57900964e-29, -1.71467643e-41],
    [6.24137442e-04, 2.58505868e-14, 5.15103451e-17, 1.26867429e-21, -2.69550553e-41, -1.40823075e-28, 3.23196939e-40],
    [6.53589881e-04, 6.39292034e-12, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
    [6.79642066e-04, 3.47715271e-08, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
    [1.02414974e-03, 4.79825588e-07, 4.82208670e-10, 1.10167545e-10, 2.47245691e-20, 6.93407859e-14, 5.78382482e-21],
    [7.54652195e-04, 5.66805135e-13, 2.74968995e-10, 6.74096126e-17, -9.08932883e-30, -5.04947996e-23, -1.26913034e-30],
    [7.87329936e-04, 5.02700891e-08, 2.95219272e-10, 8.14283581e-12, 3.99241673e-22, 1.82570458e-15, -4.40420845e-26],
    [1.16473417e-03, 7.86905262e-07, 4.68761052e-10, 4.38785628e-11, -1.84251432e-21, -2.06559317e-14, -6.01717323e-21],
    [7.47410298e-04, 1.31664998e-07, 1.42525067e-17, 1.73176404e-18, 7.16105916e-36, -1.57217976e-22, 4.76871581e-36],
    [7.08684161e-04, 7.50781060e-08, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
    [6.24137171e-04, 1.35800898e-13, 5.91369670e-18, 2.47464285e-21, 2.82307926e-40, -1.09927507e-28, -9.96018119e-41],
    [6.24139664e-04, 3.36535464e-14, 4.47226955e-16, 9.91783397e-21, -1.84684656e-38, -1.56522050e-27, 9.75751026e-39],
    [1.05217102e-03, 6.79904864e-07, 1.33781618e-17, 1.50063643e-18, 5.50928146e-36, 1.05923075e-21, 3.85442724e-36],
    [5.86794482e-03, 1.09641293e-14, 8.94071624e-17, 5.33303178e-16, 7.45628477e-32, 5.40511493e-23, -8.94509858e-32],
    [8.71451258e-04, 1.89856824e-07, 3.30905540e-10, 1.32362216e-11, -8.75987809e-22, -5.76736097e-15, 0.00000000e+00],
    [7.62364507e-04, 1.11564705e-08, 2.80248614e-10, 1.56889856e-12, 3.28642871e-23, 1.65619032e-16, -1.47980310e-24],
    [5.53934355e-03, 3.34297770e-11, 9.21340929e-16, 2.01556764e-10, -8.40544043e-23, -1.16525392e-15, 2.18870972e-23]
]

y = [3, 3, 3, 1, 1, 2, 2, 3, 2, 1, 2, 2, 1, 1, 1, 2, 2, 3, 3, 3, 3, 2, 2, 1, 1, 2, 1, 3, 3, 1]

#for j in x:
 #   for i in x[j]:
  #      x[j[i]] = -1 * copysign(1.0, x[j]) * log10(abs(x[j]))
rows = 30
columns= 7
for i in range(rows):
    for j in range(columns):
        x[i][j] = -1 * np.copysign(1.0, x[i][j]) * np.log10(np.absolute(x[i][j])) #TODO me tira un error de numero negativo pero tengo el abs
        print(x[i][j])


classifier = tree.DecisionTreeClassifier().fit(x, y)
fig = plt.figure(figsize=(25, 20))
_ = tree.plot_tree(classifier)
fig.savefig("decistion_tree.png")
# guarda el modelo en un archivo
dump(classifier, 'classifier.joblib')
